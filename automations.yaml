- id: '1704106743392'
  alias: 'Energy: Octopus Flux Tariffs'
  description: Sets the tariff
  trigger:
  - platform: time
    at: input_datetime.off_peak_energy_start
    variables:
      tariff: eco
  - platform: time
    at: input_datetime.off_peak_energy_end
    variables:
      tariff: day
  - platform: time
    at: input_datetime.peak_energy_start
    variables:
      tariff: peak
  - platform: time
    at: input_datetime.peak_energy_end
    variables:
      tariff: day
  action:
  - service: select.select_option
    target:
      entity_id: select.grid_consumption_house
    data:
      option: '{{ tariff }}'
  - service: select.select_option
    target:
      entity_id: select.grid_consumption_workshop
    data:
      option: '{{ tariff }}'
  - service: select.select_option
    target:
      entity_id: select.feed_in_house
    data:
      option: '{{ tariff }}'
  - service: select.select_option
    target:
      entity_id: select.feed_in_workshop
    data:
      option: '{{ tariff }}'
  mode: single
- id: '1704185991516'
  alias: 'Energy: Battery Max SoC setting'
  description: Sets the Max SoC according to the time of day based on tariffs using
    the input number values on dashboard
  trigger:
  - platform: time
    at: input_datetime.off_peak_energy_start
    variables:
      maxSoC: '{{ states(''input_number.max_soc_eco'') | float(states(''number.workshop_min_soc''))
        }}'
  - platform: time
    at: input_datetime.off_peak_energy_end
    variables:
      maxSoC: '{{ states(''input_number.max_soc_day'') | float(states(''number.workshop_min_soc''))
        }}'
  - platform: time
    at: input_datetime.peak_energy_start
    variables:
      maxSoC: '{{ states(''input_number.max_soc_peak'') | float(states(''number.workshop_min_soc''))
        }}'
  - platform: time
    at: input_datetime.peak_energy_end
    variables:
      maxSoC: '{{ states(''input_number.max_soc_day'') | float(states(''number.workshop_min_soc''))
        }}'
  condition: []
  action:
  - service: number.set_value
    target:
      entity_id: number.workshop_max_soc
    data:
      value: '{{ maxSoC }}'
  mode: single
- id: '1706128884321'
  alias: 'Energy: Flux tariff: Work Mode around peak tariff times when Force exporting'
  description: Sets the inverter's Work Mode at start and end of peak tariff times
  triggers:
  - at: input_datetime.peak_energy_start
    variables:
      workmode: Force Discharge
    trigger: time
  - at: input_datetime.peak_energy_end
    variables:
      workmode: Self Use
    trigger: time
  conditions:
  - condition: state
    entity_id: input_boolean.peak_tariff_export_enabled
    state: 'on'
  actions:
  - target:
      entity_id: select.workshop_work_mode
    data:
      option: '{{ workmode }}'
    action: select.select_option
  mode: single
- id: '1712635069259'
  alias: Trigger from IFTTT Webhook to call HA service
  description: ''
  triggers:
  - event_type: ifttt_webhook_received
    event_data:
      action: call_service
    trigger: event
  conditions: []
  actions:
  - data:
      message: 'IFTTT webhook to service: "Trigger from IFTTT Webhook: {{ trigger.event.data.service
        }} entity_id {{trigger.event.data.entity_id }}"'
    action: logbook.log
  - target:
      entity_id: '{{ trigger.event.data.entity_id }}'
    action: '{{ trigger.event.data.service }}'
  mode: single
- id: '1718360862145'
  alias: 'Energy: Battery Min SoC setting'
  description: Sets the Min SoC according to the time of day based on tariffs using
    the input number values on dashboard
  trigger:
  - platform: time
    at: input_datetime.off_peak_energy_start
    variables:
      minSoC: '{{ float(states(''input_number.min_soc_eco'')) }}'
  - platform: time
    at: input_datetime.off_peak_energy_end
    variables:
      minSoC: '{{ float(states(''input_number.min_soc_day'')) }}'
  - platform: time
    at: input_datetime.peak_energy_start
    variables:
      minSoC: '{{ float(states(''input_number.min_soc_peak'')) }}'
  - platform: time
    at: input_datetime.peak_energy_end
    variables:
      minSoC: '{{ float(states(''input_number.min_soc_day'')) }}'
  condition: []
  action:
  - service: number.set_value
    target:
      entity_id: number.workshop_min_soc
    data:
      value: '{{ minSoC }}'
  - service: number.set_value
    target:
      entity_id: number.workshop_min_soc_on_grid
    data:
      value: '{{ minSoC }}'
  mode: single
- id: '1718709626558'
  alias: 'Energy: Battery Switch Work mode from Force Discharge to Feed-in First -
    when target Force Discharge SoC level achieved'
  description: Sets the work mode back to Feed-in First (from Force Discharge) once
    the target SoC acheived. - it 'polls' every 5 minutes during the 16th, 17th &
    18th hours to check condition
  trigger:
  - platform: time_pattern
    hours: 16
    minutes: /5
  - platform: time_pattern
    hours: 17
    minutes: /5
  - platform: time_pattern
    hours: 18
    minutes: /5
  condition:
  - and:
    - condition: template
      value_template: '{{ states(''select.workshop_work_mode'') == ''Force Discharge''
        }}'
    - condition: template
      value_template: '{{ states(''sensor.workshop_battery_soc'')|float(0) <= states(''input_number.target_soc_force_export'')|float(0)
        }}'
  action:
  - variables:
      workmode: Feed-in First
  - service: select.select_option
    target:
      entity_id: select.workshop_work_mode
    data:
      option: '{{ workmode }}'
  mode: single
- id: '1719987517277'
  alias: 'Energy: Battery: Enable 2nd charge period before Peak Tariff period'
  description: Sets the 2nd charge period to enable in the hour before the peak tariff
    if SoC below Max SoC minus Daytime Charge Offset %
  trigger:
  - platform: time_pattern
    hours: 15
    minutes: /5
  condition:
  - and:
    - condition: template
      value_template: '{{ states(''binary_sensor.workshop_time_period_2_enable_force_charge'')
        == ''off'' }}'
    - condition: template
      value_template: "{{ states('sensor.workshop_battery_soc')|float(0) <=\n   states('number.workshop_max_soc')|float(0)
        -\n   states('input_number.daytime_charge_offset')|float(0) }}"
  action:
  - service: foxess_modbus.update_charge_period
    data:
      inverter: 1185fbf7ef097c175604da2d3bb46177
      charge_period: '2'
      enable_charge_from_grid: true
      enable_force_charge: true
      start: '15:00:00'
      end: '15:55:00'
  - service: ifttt.trigger
    data:
      event: HA_trigger_sheet
      value1: Daytime pre-PEAK charge log
      value2: Grid Consumption so far today = {{ states('sensor.workshop_grid_consumption_energy_today')
        }} KWh
      value3: Enabled at {{ states('sensor.workshop_battery_soc') }}%
  mode: single
- id: '1719987790324'
  alias: 'Energy: Battery: Disable 2nd charge period before the Peak Tarriff'
  description: Disables the 2nd charge period if SoC >= the batteries current Max
    SoC % in hour before peak tarriff
  trigger:
  - platform: time_pattern
    hours: 15
    minutes: /5
  - platform: time
    at: '16:00:00'
  condition:
  - and:
    - condition: template
      value_template: '{{ states(''binary_sensor.workshop_time_period_2_enable_force_charge'')
        == ''on'' }}'
    - condition: template
      value_template: "{{ states('sensor.workshop_battery_soc')|float(0) >=\n   states('number.workshop_max_soc')|float(0)
        }}"
  action:
  - service: foxess_modbus.update_charge_period
    data:
      inverter: 1185fbf7ef097c175604da2d3bb46177
      charge_period: '2'
      enable_charge_from_grid: true
      enable_force_charge: false
      start: '15:00:00'
      end: '15:55:00'
  - service: ifttt.trigger
    data:
      event: HA_trigger_sheet
      value1: Daytime pre-PEAK charge log
      value2: Grid Consumption so far today = {{ states('sensor.workshop_grid_consumption_energy_today')
        }} KWh
      value3: Disabled at {{ states('sensor.workshop_battery_soc') }}%
  mode: single
- id: '1720625260635'
  alias: 'Energy: Battery: Enable 1st charge period during Eco Tariff period'
  description: Enables the 1st charge period if SoC below Max SoC minus ECO Charge
    Offset %
  trigger:
  - platform: time_pattern
    hours: 2
    minutes: /5
  - platform: time_pattern
    hours: 3
    minutes: /5
  - platform: time_pattern
    hours: 4
    minutes: /5
  condition:
  - and:
    - condition: template
      value_template: '{{ states(''binary_sensor.workshop_time_period_1_enable_force_charge'')
        == ''off'' }}'
    - condition: template
      value_template: "{{ states('sensor.workshop_battery_soc')|float(0) <=\n   states('number.workshop_max_soc')|float(0)
        -\n   states('input_number.eco_charge_offset')|float(0) }}"
  action:
  - service: foxess_modbus.update_charge_period
    data:
      inverter: 1185fbf7ef097c175604da2d3bb46177
      charge_period: '1'
      enable_charge_from_grid: true
      enable_force_charge: true
      start: 02:00:00
      end: 04:55:00
  - service: ifttt.trigger
    data:
      event: HA_trigger_sheet
      value1: Overnight ECO charge log
      value2: Grid Consumption so far today = {{ states('sensor.workshop_grid_consumption_energy_today')
        }} KWh
      value3: Enabled at {{ states('sensor.workshop_battery_soc') }}%
  mode: single
- id: '1720626084395'
  alias: 'Energy: Battery: Disable 1st charge period during Eco Tariff period'
  description: Disables the 1st charge period if SoC >= the batteries current Max
    SoC %
  trigger:
  - platform: time_pattern
    hours: 2
    minutes: /5
  - platform: time_pattern
    hours: 3
    minutes: /5
  - platform: time_pattern
    hours: 4
    minutes: /5
  - platform: time
    at: 05:00:00
  condition:
  - and:
    - condition: template
      value_template: '{{ states(''binary_sensor.workshop_time_period_1_enable_force_charge'')
        == ''on'' }}'
    - condition: template
      value_template: "{{ states('sensor.workshop_battery_soc')|float(0) >=\n   states('number.workshop_max_soc')|float(0)
        }}"
  action:
  - service: foxess_modbus.update_charge_period
    data:
      inverter: 1185fbf7ef097c175604da2d3bb46177
      charge_period: '1'
      enable_charge_from_grid: true
      enable_force_charge: false
      start: 02:00:00
      end: 04:55:00
  - service: ifttt.trigger
    data:
      event: HA_trigger_sheet
      value1: Overnight ECO charge log
      value2: Grid Consumption so far today = {{ states('sensor.workshop_grid_consumption_energy_today')
        }} KWh
      value3: Disabled at {{ states('sensor.workshop_battery_soc') }}%
  mode: single
- id: '1722951908479'
  alias: 'Energy: Battery Switch Work mode from Feed-in First to Self Use - below
    target Force Discharge SoC level'
  description: Sets the work mode back to Self Use if workmode is Feed-in First and
    the SoC is below the target SoC - it 'polls' every 5 minutes during the 16th,
    17th & 18th hours to check condition
  trigger:
  - platform: time_pattern
    hours: 16
    minutes: /5
  - platform: time_pattern
    hours: 17
    minutes: /5
  - platform: time_pattern
    hours: 18
    minutes: /5
  condition:
  - and:
    - condition: template
      value_template: '{{ states(''select.workshop_work_mode'') == ''Feed-in First''
        }}'
    - condition: template
      value_template: '{{ states(''sensor.workshop_battery_soc'')|float(0) < states(''input_number.target_soc_force_export'')|float(0)
        }}'
  action:
  - variables:
      workmode: Self Use
  - service: select.select_option
    target:
      entity_id: select.workshop_work_mode
    data:
      option: '{{ workmode }}'
  mode: single
- id: '1723828018073'
  alias: IFTTT adds row to spreadsheet and calender when batteries fully charged
  description: using IFTTT
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - and:
    - condition: template
      value_template: '{{ states(''input_boolean.battery_full_today'') == ''off''
        }}'
    - condition: template
      value_template: '{{ states(''sensor.workshop_battery_soc'')|float(0) == 100
        }}'
  action:
  - service: ifttt.trigger
    data:
      event: HA_trigger_sheet
      value1: Battery Log - fully charged
      value2: '{% for state in states.weather -%} {%- if loop.first %}The {% elif
        loop.last %} and the {% else %}, the {% endif -%} {{ state.name | lower }}
        is {{state.state_with_unit}} {%- endfor %}.'
      value3: '{% if is_state("sun.sun", "above_horizon") -%}  The sun rose {{ relative_time(states.sun.sun.last_changed)
        }} ago. {%- else -%} The sun will rise at {{ as_timestamp(state_attr("sun.sun",
        "next_rising")) | timestamp_local }}. {%- endif %} '
  - service: ifttt.trigger
    data:
      event: HA_trigger_calendar
      value1: Batteries 100%
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.battery_full_today
    data: {}
  - service: notify.marcus_email
    data:
      title: Batteries charged
      message: Batteries reached 100%
  mode: single
- id: '1723995992121'
  alias: Energy - Reset Battery Full Flag
  description: ''
  triggers:
  - at: 00:00:00
    trigger: time
  - event: sunrise
    offset: 0
    trigger: sun
  conditions: []
  actions:
  - target:
      entity_id: input_boolean.battery_full_today
    data: {}
    action: input_boolean.turn_off
  mode: single
- id: '1724261138857'
  alias: Calendar IFTTT Marcus enter RRRC
  description: ''
  trigger:
  - platform: device
    device_id: 324998ffb948ed02379e230c280bc738
    domain: device_tracker
    entity_id: 98354a31bf3665ee1d1caba68923e38f
    type: enters
    zone: zone.recycle_centre
  condition: []
  action:
  - service: ifttt.trigger
    data:
      event: HA_trigger_calendar
      value1: Entered Recycle Centre Kimpton RRRC
  mode: single
- id: '1724261205032'
  alias: Calendar IFTTT Marcus enter Screwfix
  description: ''
  trigger:
  - platform: device
    device_id: 324998ffb948ed02379e230c280bc738
    domain: device_tracker
    entity_id: 98354a31bf3665ee1d1caba68923e38f
    type: enters
    zone: zone.screwfix
  condition: []
  action:
  - service: ifttt.trigger
    data:
      event: HA_trigger_calendar
      value1: Entered Screwfix
  mode: single
- id: '1724261234584'
  alias: Calendar IFTTT Marcus enter Tesco
  description: ''
  trigger:
  - platform: device
    device_id: 324998ffb948ed02379e230c280bc738
    domain: device_tracker
    entity_id: 98354a31bf3665ee1d1caba68923e38f
    type: enters
    zone: zone.tesco
  condition: []
  action:
  - service: ifttt.trigger
    data:
      event: HA_trigger_calendar
      value1: Entered Tesco
  mode: single
- id: '1724261277522'
  alias: Calendar IFTTT Marcus enter The Hope
  description: ''
  trigger:
  - platform: device
    device_id: 324998ffb948ed02379e230c280bc738
    domain: device_tracker
    entity_id: 98354a31bf3665ee1d1caba68923e38f
    type: enters
    zone: zone.the_hope
  condition: []
  action:
  - service: ifttt.trigger
    data:
      event: HA_trigger_calendar
      value1: Entered The Hope
  mode: single
- id: '1724261342636'
  alias: Calendar IFTTT Marcus leaves The Hope
  description: ''
  trigger:
  - platform: device
    device_id: 324998ffb948ed02379e230c280bc738
    domain: device_tracker
    entity_id: 98354a31bf3665ee1d1caba68923e38f
    type: leaves
    zone: zone.the_hope
  condition: []
  action:
  - service: ifttt.trigger
    data:
      event: HA_trigger_calendar
      value1: Left The Hope
  mode: single
- id: '1724261461321'
  alias: Calendar IFTTT Marcus leaves Tesco
  description: ''
  trigger:
  - platform: device
    device_id: 324998ffb948ed02379e230c280bc738
    domain: device_tracker
    entity_id: 98354a31bf3665ee1d1caba68923e38f
    type: leaves
    zone: zone.tesco
  condition: []
  action:
  - service: ifttt.trigger
    data:
      event: HA_trigger_calendar
      value1: Left Tesco
  mode: single
- id: '1724261571070'
  alias: Calendar IFTTT Marcus returns Home
  description: ''
  trigger:
  - platform: device
    device_id: 324998ffb948ed02379e230c280bc738
    domain: device_tracker
    entity_id: 98354a31bf3665ee1d1caba68923e38f
    type: enters
    zone: zone.home
  condition: []
  action:
  - service: ifttt.trigger
    data:
      event: HA_trigger_calendar
      value1: Returned Home
  mode: single
- id: '1724261610598'
  alias: Calendar IFTTT Marcus leaves Home
  description: ''
  trigger:
  - platform: device
    device_id: 324998ffb948ed02379e230c280bc738
    domain: device_tracker
    entity_id: 98354a31bf3665ee1d1caba68923e38f
    type: leaves
    zone: zone.home
  condition: []
  action:
  - service: ifttt.trigger
    data:
      event: HA_trigger_calendar
      value1: Leaves Home
  mode: single
- id: '1727682293238'
  alias: 'Energy: Battery: Charge Reduction'
  description: 'This is a simple automation that sets the charge current to 4A above
    93% SoC and then increases it backs to 35A (the default max setting) when the
    battery drops below 90%.

    https://foxesscommunity.com/viewtopic.php?t=946'
  trigger:
  - platform: time_pattern
    minutes: /10
  condition:
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.workshop_battery_soc
      below: 90
    - condition: numeric_state
      entity_id: sensor.workshop_battery_soc
      above: 93
  action:
  - if:
    - condition: numeric_state
      entity_id: sensor.workshop_battery_soc
      above: 92
    then:
    - if:
      - condition: numeric_state
        entity_id: sensor.workshop_max_charge_current
        above: 10
      then:
      - service: number.set_value
        data:
          value: 4
        target:
          entity_id: number.workshop_max_charge_current
      - service: logbook.log
        data:
          message: Setting Max Charge to 4A
          name: Max Charge
    else:
    - if:
      - condition: numeric_state
        entity_id: sensor.workshop_battery_soc
        below: 90
      then:
      - if:
        - condition: numeric_state
          entity_id: sensor.workshop_max_charge_current
          below: 10
        then:
        - service: number.set_value
          data:
            value: 35
          target:
            entity_id: number.workshop_max_charge_current
        - service: logbook.log
          data:
            message: Setting Max Charge to 35A
            name: Max Charge
  mode: single
- id: '1731914318980'
  alias: Email warning - workshop heater
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.heater_current_power
    for:
      hours: 0
      minutes: 0
      seconds: 30
    above: 500
  condition: []
  action:
  - service: notify.marcus_email
    data:
      message: Heater is running current power {{ states('sensor.heater_current_power')
        }}W,  So far today it's used {{states('sensor.heater_today_energy') }} KWh
        and been on for  {{states('sensor.heater_today_runtime') }} mins.
      title: Check heater in workshop
  mode: single
- id: '1731915273289'
  alias: Email warning - Iris' room
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.iriss_room_current_power
    for:
      hours: 0
      minutes: 0
      seconds: 30
    above: 500
  - platform: numeric_state
    entity_id:
    - sensor.iriss_room_today_energy
    above: 1
  condition: []
  action:
  - service: notify.marcus_email
    data:
      message: Her room's current power {{ states('sensor.iriss_room_current_power')
        }}W,  So far today it's used {{states('sensor.iriss_room_today_energy') }}kWh
      title: Check Iris' room for anything left on
  mode: single
- id: '1733254185943'
  alias: 'Energy: Battery: Max SoC according to the alternative cooking value'
  description: Sets the Max SoC according to the alternative cooking value
  trigger:
  - platform: time
    at: '14:55:00'
    variables:
      maxSoC: '{{ states(''input_number.max_soc_day_alternative_cooking'') | float(states(''number.workshop_min_soc''))
        }}'
  condition:
  - condition: template
    value_template: "{{ states('sensor.oven_today_energy')|float(0) >=\n     states('input_number.energy_trigger_cooking')|float(0)
      }}"
  action:
  - service: number.set_value
    target:
      entity_id: number.workshop_max_soc
    data:
      value: '{{ maxSoC }}'
  - service: notify.marcus_email
    data:
      message: Oven current power {{ states('sensor.oven_current_power') }}W, so far
        today it's used {{ states('sensor.oven_today_energy') }}kWh and the heater
        in the workshop is currently using {{ states('sensor.heater_current_power')
        }}W, so far today it's used {{ states('sensor.heater_today_energy') }}kWh
        Either one of these has triggered Max SoC to now be set to {{ states('number.workshop_max_soc')
        }}% (instead of normal Max SoC DAY {{ states('input_number.max_soc_day') }}%).
        The Battery SoC is currently {{ states('sensor.workshop_battery_soc') }}%
        (so there's a {{ states('sensor.workshop_battery_soc')|float(0) - states('number.workshop_max_soc')|float(0)  }}%
        difference there before 4pm peak starts in about an hour.)
      title: Bumped up Max SoC Day as looks like we're cooking or using heater
  mode: single
- id: '1737056136655'
  alias: Email warning - Breville
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.breville_current_power
    for:
      hours: 0
      minutes: 0
      seconds: 30
    above: 500
  - platform: numeric_state
    entity_id:
    - sensor.breville_today_energy
    above: 1
  condition: []
  action:
  - service: notify.marcus_email
    data:
      message: It's current power = {{ states('sensor.breville_current_power') }}W,  So
        far today it's used {{states('sensor.breville_today_energy') }}kWh
      title: Check kitchen and make sure Breville not left on by mistake
  mode: single
- id: '1738323900814'
  alias: Email warning - workshop hot water heater
  description: ''
  triggers:
  - entity_id:
    - sensor.water_heater_current_power
    for:
      hours: 0
      minutes: 3
      seconds: 0
    above: 1000
    trigger: numeric_state
    attribute: curr
  - entity_id:
    - sensor.water_heater_today_energy
    above: 1
    trigger: numeric_state
  conditions: []
  actions:
  - data:
      message: It's currently using {{ states('sensor.water_heater_current_power')
        }} W,  So far today it's used {{states('sensor.water_heater_today_energy')
        }} kWh
      title: Check workshop hot water
    action: notify.marcus_email
  mode: single
- id: '1740657511428'
  alias: 'Energy: set Max SoC ECO based on tomorrow''s PV forecast'
  description: Sets the Max SoC ECO according to the forecast for tomorrow
  triggers:
  - at: '22:15:00'
    trigger: time
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.solcast_pv_forecast_forecast_tomorrow
        above: input_number.pv_forecasthigh_threshold
      sequence:
      - target:
          entity_id: input_number.max_soc_eco
        data:
          value: '{{ states(''input_number.max_soc_eco_high'') | float(0) }}'
        action: input_number.set_value
      - data:
          message: Setting Max SoC ECO to {{ states('input_number.max_soc_eco_high')
            }}% as PV forcast is {{ states('sensor.solcast_pv_forecast_forecast_tomorrow')
            }}kWh
          name: Max SoC ECO
        action: logbook.log
    - conditions:
      - condition: numeric_state
        entity_id: sensor.solcast_pv_forecast_forecast_tomorrow
        above: input_number.pv_forecastmed_threshold
      sequence:
      - target:
          entity_id: input_number.max_soc_eco
        data:
          value: '{{ states(''input_number.max_soc_eco_medium'') | float(0) }}'
        action: input_number.set_value
      - data:
          message: Setting Max SoC ECO to {{ states('input_number.max_soc_eco_medium')
            }}% as PV forcast is {{ states('sensor.solcast_pv_forecast_forecast_tomorrow')
            }}kWh
          name: Max SoC ECO
        action: logbook.log
    - conditions:
      - condition: numeric_state
        entity_id: sensor.solcast_pv_forecast_forecast_tomorrow
        above: input_number.pv_forecastlow_threshold
      sequence:
      - target:
          entity_id: input_number.max_soc_eco
        data:
          value: '{{ states(''input_number.max_soc_eco_low'') | float(0) }}'
        action: input_number.set_value
      - data:
          message: Setting Max SoC ECO to {{ states('input_number.max_soc_eco_low')
            }}% as PV forcast is {{ states('sensor.solcast_pv_forecast_forecast_tomorrow')
            }}kWh
          name: Max SoC ECO
        action: logbook.log
    default:
    - target:
        entity_id: input_number.max_soc_eco
      data:
        value: '{{ states(''input_number.max_soc_eco_default'') | float(0) }}'
      action: input_number.set_value
    - data:
        message: Setting Max SoC EC to default {{ states('input_number.max_soc_eco_default')
          }}% PV forcast is {{ states('sensor.solcast_pv_forecast_forecast_tomorrow')
          }}kWh - check why default?
        name: Max SoC ECO
      action: logbook.log
  - data:
      event: HA_trigger_calendar
      value1: Max SoC ECO = {{ states('input_number.max_soc_eco') }}% PV forecast
        {{ states('sensor.solcast_pv_forecast_forecast_tomorrow') }}kWh
    action: ifttt.trigger
  - data:
      event: HA_trigger_sheet
      value1: PV Forecasts setting Max SoC ECO
      value2: Tomorrow PV forecast {{ states('sensor.solcast_pv_forecast_forecast_tomorrow')
        }}kWh
      value3: Todays actual PV {{ states('sensor.generation_today') }}kWh
    action: ifttt.trigger
  - data:
      message: Tomorrow's forecast PV = {{ states('sensor.solcast_pv_forecast_forecast_tomorrow')
        }} kWh Max SoC ECO set to {{ states('input_number.max_soc_eco') }}% for the
        overnight charge.
    action: notify.marcus_email
  mode: single
- id: '1740673832275'
  alias: 'Energy: Reset the Max SoC ECO to default'
  description: ''
  triggers:
  - at: input_datetime.off_peak_energy_end
    trigger: time
  conditions: []
  actions:
  - target:
      entity_id: input_number.max_soc_eco
    data:
      value: '{{ states(''input_number.max_soc_eco_default'') | float(0) }}'
    action: input_number.set_value
  mode: single
- id: '1741125922921'
  alias: Turn on CCTV monitor if Door Bell Visitor
  description: ''
  triggers:
  - type: turned_on
    device_id: 0c2fa370e19dd3120be880febd2d14f6
    entity_id: 50e653e2427c85a49849fc380565e847
    domain: binary_sensor
    trigger: device
  conditions:
  - condition: state
    entity_id: switch.cctv_monitor
    state: 'off'
  actions:
  - action: script.turn_on_cctv_monitor_5_mins
    metadata: {}
    data: {}
  mode: single
- id: '1742382554771'
  alias: 'Energy: set flag to force peak export based on tomorrow''s PV forecast'
  description: Sets the flag to force peak export based on tomorrow's PV forecast
  triggers:
  - at: '22:20:00'
    trigger: time
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.solcast_pv_forecast_forecast_tomorrow
        above: input_number.input_number_pv_forecastpeak_export_threshold
      sequence:
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.peak_tariff_export_enabled
    default:
    - action: input_boolean.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: input_boolean.peak_tariff_export_enabled
  - data:
      message: Tomorrow's forecast PV = {{ states('sensor.solcast_pv_forecast_forecast_tomorrow')
        }} kWh so the flag to export during peak tariff set to {{ states('input_boolean.peak_tariff_export_enabled')
        }} for tomorrow.
    action: notify.marcus_email
  mode: single
- id: '1743528120482'
  alias: 'Pool Room: turn TV on if person detected (CCTV)'
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.pool_room_person
    to: 'on'
  conditions:
  - condition: device
    type: is_off
    device_id: e22bd9643a03ccfdd146071f933bceb0
    entity_id: b2dc0da6a18ef1c6696ebfdf8f81b692
    domain: switch
  actions:
  - type: turn_on
    device_id: e22bd9643a03ccfdd146071f933bceb0
    entity_id: b2dc0da6a18ef1c6696ebfdf8f81b692
    domain: switch
  mode: single
- id: '1743575339217'
  alias: 'Switches: Pool room: Turn off TV if no motion detected'
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.pool_room_person
    to: 'off'
    for:
      hours: 0
      minutes: 45
      seconds: 0
  conditions:
  - condition: device
    type: is_on
    device_id: e22bd9643a03ccfdd146071f933bceb0
    entity_id: cd7e44c44030b60a17ea655e6d2cbb1b
    domain: switch
    for:
      hours: 0
      minutes: 30
      seconds: 0
  actions:
  - type: turn_off
    device_id: e22bd9643a03ccfdd146071f933bceb0
    entity_id: cd7e44c44030b60a17ea655e6d2cbb1b
    domain: switch
  mode: single
- id: '1743575766984'
  alias: 'Switches: Pool room: Turn on lamp if dark and motion detected'
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.pool_room_person
    to: 'on'
  conditions:
  - condition: sun
    before: sunrise
  actions:
  - action: scene.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: scene.pool_room_light_blue
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - type: turn_off
    device_id: 884f68553e69441148296ac281012994
    entity_id: 48390b26e6605aa1e1fd911cfdfcdbec
    domain: light
  mode: single
- id: '1743577499206'
  alias: 'Switches: Pool room: Turn off lamp if dark and no motion detected'
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.pool_room_person
    to: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  conditions:
  - condition: sun
    before: sunrise
  actions:
  - type: turn_off
    device_id: 884f68553e69441148296ac281012994
    entity_id: 48390b26e6605aa1e1fd911cfdfcdbec
    domain: light
  mode: single
- id: '1743577751018'
  alias: 'Switches: Garden: Turn on corridor if dark and person detected (CCTV)'
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.garden_person
    to: 'on'
  conditions:
  - condition: sun
    before: sunrise
  - condition: device
    type: is_off
    device_id: f5c48cb9736b686921fba7f33027783d
    entity_id: 813faf4a006b336e0784df661249fac8
    domain: light
  actions:
  - action: script.turn_on_garden_corridor_1_min
    metadata: {}
    data: {}
  mode: single
- id: '1744037830914'
  alias: Overnight Dim Scene Activation
  description: Activate overnight dim scene with different times for weekdays and
    weekends.
  triggers:
  - at: '22:40:00'
    id: weekday_time
    trigger: time
  - at: '23:00:00'
    id: weekend_time
    trigger: time
  conditions:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: trigger
        id: weekday_time
      - condition: time
        weekday:
        - sun
        - mon
        - tue
        - wed
        - thu
    - condition: and
      conditions:
      - condition: trigger
        id: weekend_time
      - condition: time
        weekday:
        - fri
        - sat
  actions:
  - target:
      entity_id: scene.overnight_dim
    action: scene.turn_on
  - target:
      entity_id: input_boolean.overnight_dim_active
    action: input_boolean.turn_on
  mode: single
- id: '1744037903514'
  alias: Morning Reset
  description: ''
  triggers:
  - at: 05:30:00
    trigger: time
  actions:
  - target:
      entity_id: input_boolean.overnight_dim_active
    action: input_boolean.turn_off
    data: {}
  mode: single
- id: '1744038635290'
  alias: 'Switches: Landing: dynamic brightness adjustment overnight'
  description: Increase brightness on motion during overnight dim, reduce after both
    sensors clear with a small delay.
  triggers:
  - entity_id:
    - binary_sensor.motion_hallway_occupancy
    - binary_sensor.motion_landing_occupancy
    to: 'on'
    id: motion_on
    trigger: state
  - entity_id:
    - binary_sensor.motion_hallway_occupancy
    - binary_sensor.motion_landing_occupancy
    to: 'off'
    id: motion_off
    trigger: state
  conditions:
  - condition: state
    entity_id: input_boolean.overnight_dim_active
    state: 'on'
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: motion_on
      sequence:
      - target:
          entity_id: scene.landing_hall_on
        action: scene.turn_on
      - target:
          entity_id: light.controller_rgb_c1f45a
        data:
          brightness_pct: 80
        action: light.turn_on
    - conditions:
      - condition: trigger
        id: motion_off
      sequence:
      - delay: 00:00:05
      - condition: and
        conditions:
        - condition: state
          entity_id: binary_sensor.motion_hallway_occupancy
          state: 'off'
        - condition: state
          entity_id: binary_sensor.motion_landing_occupancy
          state: 'off'
      - target:
          entity_id: scene.landing_hall_off
        action: scene.turn_on
      - target:
          entity_id: light.controller_rgb_c1f45a
        data:
          brightness_pct: 3
        action: light.turn_on
  mode: restart
- id: '1744039170743'
  alias: 'Switches: Kitchen: dynamic lighting on motion'
  description: Turn on kitchen lights on motion, dim after clear with small delay.
  triggers:
  - entity_id: binary_sensor.motion_kitchen_occupancy
    to: 'on'
    id: motion_on
    trigger: state
  - entity_id: binary_sensor.motion_kitchen_occupancy
    to: 'off'
    id: motion_off
    trigger: state
  conditions:
  - condition: state
    entity_id: input_boolean.overnight_dim_active
    state: 'on'
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: motion_on
      sequence:
      - target:
          entity_id:
          - light.kitchen_floor_strip_light
          - light.kitchen_fridge_light_strip
        data:
          brightness_pct: 80
        action: light.turn_on
    - conditions:
      - condition: trigger
        id: motion_off
      sequence:
      - delay: 00:00:05
      - condition: state
        entity_id: binary_sensor.motion_kitchen_occupancy
        state: 'off'
      - target:
          entity_id:
          - light.kitchen_floor_strip_light
          - light.kitchen_fridge_light_strip
        data:
          brightness_pct: 3
        action: light.turn_on
  mode: restart
- id: '1744039224088'
  alias: 'Switches: Utility Room: dynamic lighting on motion'
  description: Turn on utility room light on motion, dim after clear with small delay.
  triggers:
  - entity_id: binary_sensor.motion_utility_occupancy
    to: 'on'
    id: motion_on
    trigger: state
  - entity_id: binary_sensor.motion_utility_occupancy
    to: 'off'
    id: motion_off
    trigger: state
  conditions:
  - condition: state
    entity_id: input_boolean.overnight_dim_active
    state: 'on'
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: motion_on
      sequence:
      - target:
          entity_id: light.controller_rgb_c1f544
        data:
          brightness_pct: 80
        action: light.turn_on
    - conditions:
      - condition: trigger
        id: motion_off
      sequence:
      - delay: 00:00:05
      - condition: state
        entity_id: binary_sensor.motion_utility_occupancy
        state: 'off'
      - target:
          entity_id: light.controller_rgb_c1f544
        data:
          brightness_pct: 3
        action: light.turn_on
  mode: restart
- id: '1744040652495'
  alias: 'Safety: Breville turn off if no kitchen occupancy'
  description: Turn off Breville if kitchen empty for 5 mins while in use.
  triggers:
  - entity_id: binary_sensor.motion_kitchen_occupancy
    to: 'off'
    for:
      minutes: 5
    trigger: state
  conditions:
  - condition: numeric_state
    entity_id: sensor.breville_current_power
    above: 500
  actions:
  - target:
      entity_id: switch.breville
    action: switch.turn_off
  - data:
      title: Breville Auto Turn-Off
      message: 'The Breville was turned off automatically after 5 minutes of no kitchen
        activity. Current power before shutdown: {{ states(''sensor.breville_current_power'')
        }}W.'
    action: notify.marcus_email
  mode: single
