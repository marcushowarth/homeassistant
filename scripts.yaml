bedtime:
  alias: Bedtime
  sequence:
  - if:
    - condition: state
      entity_id: binary_sensor.min_temp_fans_bedroom_exceeded
      state: 'on'
    then:
    - target:
        entity_id: switch.bedroom_fans
      action: switch.turn_on
  - target:
      entity_id: scene.garden_off
    action: scene.turn_on
  - target:
      entity_id: light.controller_dimmable_bee234
    action: light.turn_off
  - data:
      event: HA_trigger_calendar
      value1: Bedtime script run
    action: ifttt.trigger
  - delay: 00:05:00
  - target:
      entity_id: scene.overnight_dim
    action: scene.turn_on
  - target:
      entity_id: input_boolean.overnight_dim_active
    action: input_boolean.turn_on
  - data:
      event: HA_trigger_sheet
      value1: Bedtime script log
      value2: Zzzzzz ;-)
    action: ifttt.trigger
  mode: single
  icon: mdi:bed
set_min_soc_to_10:
  alias: Set Min SoC to 10%
  sequence:
  - service: number.set_value
    target:
      entity_id: number.workshop_min_soc
    data:
      value: 10
  - service: number.set_value
    target:
      entity_id: number.workshop_min_soc_on_grid
    data:
      value: 10
  mode: single
  icon: mdi:battery-10
'1724255914837':
  alias: Free Electricity Day Tomorrow
  sequence:
  - wait_for_trigger:
    - platform: time
      at: 08:30:00
    continue_on_timeout: false
    timeout:
      hours: 24
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: select.select_option
    target:
      entity_id: select.workshop_work_mode
    data:
      option: Feed-in First
  - service: foxess_modbus.update_charge_period
    data:
      enable_force_charge: true
      enable_charge_from_grid: true
      start: '{{ states(''input_datetime.free_electricity_start'') }}'
      end: '{{ states(''input_datetime.free_electricity_end'') }}'
      inverter: 1185fbf7ef097c175604da2d3bb46177
      charge_period: '2'
  - service: number.set_value
    target:
      entity_id: number.workshop_max_soc
    data:
      value: '100'
  - wait_for_trigger:
    - platform: time
      at: input_datetime.free_electricity_start
    timeout:
      hours: 6
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: false
  - service: ifttt.trigger
    data:
      event: HA_trigger_sheet
      value1: Free Electricity Log
      value2: 'Starting with: {{ states(''sensor.workshop_battery_soc'') }}% battery'
      value3: Grid Consumption so far today = {{ states('sensor.workshop_grid_consumption_energy_today')
        }} KWh
  - service: notify.marcus_email
    data:
      message: 'Starting with: {{ states(''sensor.workshop_battery_soc'') }}% battery,
        Grid Consumption so far today = {{states(''sensor.workshop_grid_consumption_energy_today'')
        }} KWh'
      title: Free Electricity START
  - wait_for_trigger:
    - platform: time
      at: input_datetime.free_electricity_end
    timeout:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: true
  - service: select.select_option
    target:
      entity_id: select.workshop_work_mode
    data:
      option: Self Use
  - service: foxess_modbus.update_charge_period
    data:
      enable_force_charge: true
      enable_charge_from_grid: true
      start: '15:00:00'
      end: '15:55:00'
      inverter: 1185fbf7ef097c175604da2d3bb46177
      charge_period: '2'
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: foxess_modbus.update_charge_period
    data:
      enable_force_charge: false
      enable_charge_from_grid: true
      start: '15:00:00'
      end: '15:55:00'
      inverter: 1185fbf7ef097c175604da2d3bb46177
      charge_period: '2'
  - service: number.set_value
    target:
      entity_id: number.workshop_max_soc
    data:
      value: '{{ states(''input_number.max_soc_day'') | float() }}'
  - service: ifttt.trigger
    data:
      event: HA_trigger_sheet
      value1: Free Electricity Log
      value2: 'Ending with: {{ states(''sensor.workshop_battery_soc'') }}% battery'
      value3: Grid Consumption now = {{ states('sensor.workshop_grid_consumption_energy_today')
        }} KWh
  - service: notify.marcus_email
    data:
      message: 'Ending with with: {{ states(''sensor.workshop_battery_soc'') }}% battery,
        Grid Consumption now = {{states(''sensor.workshop_grid_consumption_energy_today'')
        }} KWh'
      title: Free Electricity END
  mode: single
  icon: mdi:home-lightning-bolt
'1729422205524':
  alias: Free Electricity Day Today
  sequence:
  - service: select.select_option
    target:
      entity_id: select.workshop_work_mode
    data:
      option: Force Discharge
  - service: foxess_modbus.update_charge_period
    data:
      enable_force_charge: true
      enable_charge_from_grid: true
      start: '{{ states(''input_datetime.free_electricity_start'') }}'
      end: '{{ states(''input_datetime.free_electricity_end'') }}'
      inverter: 1185fbf7ef097c175604da2d3bb46177
      charge_period: '2'
  - service: number.set_value
    target:
      entity_id: number.workshop_max_soc
    data:
      value: '100'
  - wait_for_trigger:
    - platform: time
      at: input_datetime.free_electricity_start
    timeout:
      hours: 6
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: false
  - service: select.select_option
    target:
      entity_id: select.workshop_work_mode
    data:
      option: Self Use
  - service: ifttt.trigger
    data:
      event: HA_trigger_sheet
      value1: Free Electricity Log
      value2: 'Starting with: {{ states(''sensor.workshop_battery_soc'') }}% battery'
      value3: Grid Consumption so far today = {{ states('sensor.workshop_grid_consumption_energy_today')
        }} KWh
  - service: notify.marcus_email
    data:
      message: 'Starting with: {{ states(''sensor.workshop_battery_soc'') }}% battery,
        Grid Consumption so far today = {{states(''sensor.workshop_grid_consumption_energy_today'')
        }} KWh'
      title: Free Electricity START
  - wait_for_trigger:
    - platform: time
      at: input_datetime.free_electricity_end
    timeout:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: true
  - service: select.select_option
    target:
      entity_id: select.workshop_work_mode
    data:
      option: Self Use
  - service: foxess_modbus.update_charge_period
    data:
      enable_force_charge: true
      enable_charge_from_grid: true
      start: '15:00:00'
      end: '15:55:00'
      inverter: 1185fbf7ef097c175604da2d3bb46177
      charge_period: '2'
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: foxess_modbus.update_charge_period
    data:
      enable_force_charge: false
      enable_charge_from_grid: true
      start: '15:00:00'
      end: '15:55:00'
      inverter: 1185fbf7ef097c175604da2d3bb46177
      charge_period: '2'
  - service: number.set_value
    target:
      entity_id: number.workshop_max_soc
    data:
      value: '{{ states(''input_number.max_soc_day'') | float() }}'
  - service: ifttt.trigger
    data:
      event: HA_trigger_sheet
      value1: Free Electricity Log
      value2: 'Ending with: {{ states(''sensor.workshop_battery_soc'') }}% battery'
      value3: Grid Consumption now = {{ states('sensor.workshop_grid_consumption_energy_today')
        }} KWh
  - service: notify.marcus_email
    data:
      message: 'Ending with with: {{ states(''sensor.workshop_battery_soc'') }}% battery,
        Grid Consumption now = {{states(''sensor.workshop_grid_consumption_energy_today'')
        }} KWh'
      title: Free Electricity END
  mode: single
  icon: mdi:home-lightning-bolt
heat_workshop_overnight:
  alias: Heat workshop overnight
  sequence:
  - wait_for_trigger:
    - platform: time
      at: input_datetime.off_peak_energy_start
    timeout:
      hours: 12
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: false
  - service: ifttt.trigger
    data:
      event: HA_trigger_sheet
      value1: Heater Usage Log
      value2: 'Starting with: {{ states(''sensor.workshop_battery_soc'') }}% battery'
      value3: Grid Consumption so far today = {{ states('sensor.workshop_grid_consumption_energy_today')
        }} KWh
  - service: notify.marcus_email
    data:
      message: 'Starting with energy used, Heater: {{ states(''sensor.heater_today_energy'')
        }} kWh and Fan Heater: {{ states(''sensor.fan_heater_today_energy'') }} kWh
        and Grid Consumption now = {{ states(''sensor.workshop_grid_consumption_energy_today'')
        }} kWh. Fan Heater will be {{ states(''input_boolean.heat_workshop_overnight_include_fan'')
        }}'
      title: Workshop Heater START
  - service: switch.turn_on
    target:
      entity_id:
      - switch.heater
      device_id: []
      area_id: []
    data: {}
  - if:
    - condition: state
      entity_id: input_boolean.heat_workshop_overnight_include_fan
      state: 'on'
    then:
    - service: switch.turn_on
      target:
        entity_id: switch.fan_heater
      data: {}
    else:
    - service: switch.turn_off
      target:
        entity_id: switch.fan_heater
      data: {}
  - wait_for_trigger:
    - platform: time
      at: input_datetime.off_peak_energy_end
    timeout:
      hours: 12
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: false
  - service: switch.turn_off
    target:
      entity_id:
      - switch.heater
      device_id: []
      area_id: []
    data: {}
  - service: switch.turn_off
    target:
      entity_id: switch.fan_heater
    data: {}
  - service: ifttt.trigger
    data:
      event: HA_trigger_sheet
      value1: Heater Usage Log
      value2: 'Ending with: {{ states(''sensor.workshop_battery_soc'') }}% battery'
      value3: Grid Consumption now = {{ states('sensor.workshop_grid_consumption_energy_today')
        }} KWh | Heater used {{ states('sensor.heater_today_energy') }} kWh | Fan
        Heater used {{ states('sensor.fan_heater_today_energy') }} kWh
  - service: notify.marcus_email
    data:
      message: 'Ending with energy used, Heater: {{ states(''sensor.heater_today_energy'')
        }} kWh and Fan Heater: {{ states(''sensor.fan_heater_today_energy'') }} kWh
        and Grid Consumption now = {{ states(''sensor.workshop_grid_consumption_energy_today'')
        }} kWh. Fan Heater was {{ states(''input_boolean.heat_workshop_overnight_include_fan'')
        }}'
      title: Heater Workshop END
  mode: single
  icon: mdi:radiator
stop_using_battery_set_min_soc_to_current_level:
  alias: Stop using battery (set Min SoC to current level)
  sequence:
  - service: number.set_value
    target:
      entity_id: number.workshop_min_soc
    data:
      value: '{{ states(''sensor.workshop_battery_soc'') }}'
  - service: number.set_value
    target:
      entity_id: number.workshop_min_soc_on_grid
    data:
      value: '{{ states(''sensor.workshop_battery_soc'') }}'
  mode: single
  icon: mdi:battery-off
bedroom_light_marcus_up:
  alias: 'Bedroom Light: Marcus up'
  sequence:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.holiday_bedroom_lamp
    data: {}
  - service: light.turn_off
    target:
      entity_id: light.bedroom_lamp
    data: {}
  - wait_for_trigger:
    - platform: time
      at: input_datetime.bedroom_light_resume_morning
    timeout:
      hours: 4
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: input_boolean.turn_off
    target:
      entity_id:
      - input_boolean.holiday_bedroom_lamp
      device_id: []
      area_id: []
    data: {}
  mode: single
  icon: mdi:weather-sunset-up
update_octopus_energy_tariffs_with_change_detection:
  alias: Update Octopus Energy Tariffs with Change Detection
  variables:
    import_previous: '{{ states(''sensor.octopus_energy_electricity_19l3262960_1900017085873_previous_rate'')
      | float(0) }}'
    import_current: '{{ states(''sensor.octopus_energy_electricity_19l3262960_1900017085873_current_rate'')
      | float(0) }}'
    import_next: '{{ states(''sensor.octopus_energy_electricity_19l3262960_1900017085873_next_rate'')
      | float(0) }}'
    export_previous: '{{ states(''sensor.octopus_energy_electricity_19l3262960_1900092445141_export_previous_rate'')
      | float(0) }}'
    export_current: '{{ states(''sensor.octopus_energy_electricity_19l3262960_1900092445141_export_current_rate'')
      | float(0) }}'
    export_next: '{{ states(''sensor.octopus_energy_electricity_19l3262960_1900092445141_export_next_rate'')
      | float(0) }}'
    gas_today: '{{ states(''sensor.octopus_energy_gas_e6s11752851961_578554309_current_rate'')
      | float(0) }}'
    changed_tariffs: ''
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ import_previous > 0 and import_previous != states(''input_number.import_rate_eco'')
          | float(0) }}'
      sequence:
      - data:
          entity_id: input_number.import_rate_eco
          value: '{{ import_previous }}'
        action: input_number.set_value
      - variables:
          changed_tariffs: '{{ changed_tariffs + ''\nImport Rate Eco changed to: ''
            ~ import_previous ~ ''p'' }}'
    - conditions:
      - condition: template
        value_template: '{{ import_current > 0 and import_current != states(''input_number.import_rate_day'')
          | float(0) }}'
      sequence:
      - data:
          entity_id: input_number.import_rate_day
          value: '{{ import_current }}'
        action: input_number.set_value
      - variables:
          changed_tariffs: '{{ changed_tariffs + ''\nImport Rate Day changed to: ''
            ~ import_current ~ ''p'' }}'
    - conditions:
      - condition: template
        value_template: '{{ import_next > 0 and import_next != states(''input_number.import_rate_peak'')
          | float(0) }}'
      sequence:
      - data:
          entity_id: input_number.import_rate_peak
          value: '{{ import_next }}'
        action: input_number.set_value
      - variables:
          changed_tariffs: '{{ changed_tariffs + ''\nImport Rate Peak changed to:
            '' ~ import_next ~ ''p'' }}'
    - conditions:
      - condition: template
        value_template: '{{ export_previous > 0 and export_previous != states(''input_number.feed_in_rate_eco'')
          | float(0) }}'
      sequence:
      - data:
          entity_id: input_number.feed_in_rate_eco
          value: '{{ export_previous }}'
        action: input_number.set_value
      - variables:
          changed_tariffs: '{{ changed_tariffs + ''\nExport Rate Eco changed to: ''
            ~ export_previous ~ ''p'' }}'
    - conditions:
      - condition: template
        value_template: '{{ export_current > 0 and export_current != states(''input_number.feed_in_rate_day'')
          | float(0) }}'
      sequence:
      - data:
          entity_id: input_number.feed_in_rate_day
          value: '{{ export_current }}'
        action: input_number.set_value
      - variables:
          changed_tariffs: '{{ changed_tariffs + ''\nExport Rate Day changed to: ''
            ~ export_current ~ ''p'' }}'
    - conditions:
      - condition: template
        value_template: '{{ export_next > 0 and export_next != states(''input_number.feed_in_rate_peak'')
          | float(0) }}'
      sequence:
      - data:
          entity_id: input_number.feed_in_rate_peak
          value: '{{ export_next }}'
        action: input_number.set_value
      - variables:
          changed_tariffs: '{{ changed_tariffs + ''\nExport Rate Peak changed to:
            '' ~ export_next ~ ''p'' }}'
    - conditions:
      - condition: template
        value_template: '{{ gas_today > 0 and gas_today != states(''input_number.gas_rate'')
          | float(0) }}'
      sequence:
      - data:
          entity_id: input_number.gas_rate
          value: '{{ gas_today }}'
        action: input_number.set_value
      - variables:
          changed_tariffs: '{{ changed_tariffs + ''\nGas Rate changed to: '' ~ gas_today
            ~ ''p'' }}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ changed_tariffs | length > 0 }}'
      sequence:
      - data:
          title: Octopus Tariff Update
          message: 'The following tariffs were updated: {{ changed_tariffs }}'
        action: notify.marcus_email
      - data:
          event: HA_trigger_sheet
          value1: Octopus Tariff Update
          value2: 'The following tariffs were updated: {{ changed_tariffs }}'
        action: ifttt.trigger
  mode: single
  description: ''
cross_trainer_fan_45min_override:
  sequence:
  - action: input_boolean.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.workshop_crosstrainer_fan_override_on
  - delay:
      hours: 0
      minutes: 45
      seconds: 0
      milliseconds: 0
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.workshop_crosstrainer_fan_override_on
  alias: Cross Trainer Fan 45min override
  description: ''
